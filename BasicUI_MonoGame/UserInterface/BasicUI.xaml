<ek:UIRoot xmlns:UserInterface="clr-namespace:UserInterface"    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ek="clr-namespace:EmptyKeys.UserInterface.Designer;assembly=EmptyKeys.UserInterface.Designer"
             xmlns:ef="clr-namespace:EmptyKeys.UserInterface.Designer.Effects;assembly=EmptyKeys.UserInterface.Designer"
             xmlns:c="clr-namespace:EmptyKeys.UserInterface.Designer.Charts;assembly=EmptyKeys.UserInterface.Designer"
             xmlns:local="clr-namespace:UserInterface"
             mc:Ignorable="d" 
             d:DesignHeight="640" d:DesignWidth="800" ek:SoundManager.Sounds="{DynamicResource Sounds}" OwnedWindowsContent="{Binding Windows}">

    <!-- User can define style for his root control -->
    <!--ek:UIRoot.Style>
        <Style>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ek:UIRoot}">
                        <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">                            
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ek:UIRoot.Style-->

    <ek:UIRoot.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/UserInterface;component/Dictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </ek:UIRoot.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="110"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <StackPanel Background="Black">
            <Image Name="logo" Stretch="None" HorizontalAlignment="Center">
                <Image.Source>
                    <BitmapImage UriSource="Images/EmptyKeysLogoTextSmall.png" />
                </Image.Source>
                <Image.Effect>
                    <ef:DirectionalBlurEffect Angle="0" BlurAmount="0.002" />
                </Image.Effect>
            </Image>
            <TextBlock TextWrapping="Wrap" Text="{DynamicResource TitleResource}" HorizontalAlignment="Center" VerticalAlignment="Center" 
                   FontSize="15pt" FontWeight="Bold" FontFamily="Segoe UI" Foreground="LightGray" />
        </StackPanel>

        <TabControl Grid.Row="1" Margin="10" Name="TabControl">
            <TabItem Header="Controls" HorizontalContentAlignment="Stretch">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Button" VerticalAlignment="Center" />
                    <Button Name="button1" Grid.Row="0" Grid.Column="1" Content="Button 1" Width="200" Height="30" Margin="5" HorizontalAlignment="Left"
                            Command="{Binding ButtonCommand}" CommandParameter="Click Button 1" TabIndex="1">
                    </Button>

                    <Button Name="button2" Grid.Row="1" Grid.Column="1" IsEnabled="{Binding ButtonEnabled}" HorizontalAlignment="Left"
                            Content="Button 2" Width="200" Height="30" Margin="5" TabIndex="2"
                            Command="{Binding ButtonCommand}" CommandParameter="Click Button 2" />

                    <TextBlock Name="buttonResult" Grid.Row="2" Grid.Column="1" Text="{Binding ButtonResult}" HorizontalAlignment="Left" />

                    <TextBlock Text="CheckBox" VerticalAlignment="Center" Grid.Row="3" />
                    <CheckBox Name="checkBox" Grid.Row="3" Grid.Column="1" Margin="5" Content="Check Box" HorizontalAlignment="Left" TabIndex="3"/>

                    <TextBlock Text="ProgressBar" VerticalAlignment="Center" Grid.Row="4" />
                    <ProgressBar Grid.Row="4" Grid.Column="1" Value="{Binding ProgressValue}" Height="30" Margin="5" Width="200" HorizontalAlignment="Left"/>

                    <TextBlock Text="Slider" VerticalAlignment="Center" Grid.Row="5" />
                    <Slider Name="slider" Grid.Row="5" Grid.Column="1" Width="200" Value="{Binding SliderValue}" HorizontalAlignment="Left"
                            Minimum="5" Maximum="20" TabIndex="4" />

                    <TextBlock Text="TextBox" VerticalAlignment="Center" Grid.Row="6" />
                    <TextBox Name="textBox" Grid.Row="6" Grid.Column="1" Width="200" Text="{Binding TextBoxText}" 
                              HorizontalAlignment="Left" Margin="5" TabIndex="5" UndoLimit="20" SelectionBrush="Red" />

                    <TextBlock Text="Numeric" VerticalAlignment="Center" Grid.Row="7" />
                    <ek:NumericTextBox Name="numTextBox" Grid.Row="7" Grid.Column="1" Width="200" ValueFormat="F0" ValueStyle="Integer"
                                       HorizontalAlignment="Left" Margin="5" TabIndex="6" Value="{Binding NumericTextBoxValue}" />

                    <TextBlock Text="PasswordBox" VerticalAlignment="Center" Grid.Row="8" />
                    <ek:PasswordBox Grid.Row="8" Grid.Column="1" Width="200" HorizontalAlignment="Left" Margin="5" TabIndex="7" Password="{Binding Password}"/>

                    <TextBlock Text="ComboBox" VerticalAlignment="Center" Grid.Row="9" />
                    <ComboBox Name="combo" Grid.Row="9" Grid.Column="1" Width="200" Margin="5" SelectedIndex="2" TabIndex="8" HorizontalAlignment="Left">
                        <ComboBoxItem Name="item1" Content="Item 1" />
                        <ComboBoxItem Name="item2" Content="Item 2" />
                        <ComboBoxItem Name="item3" Content="Item 3" />
                    </ComboBox>

                    <TextBlock Text="ListBox" VerticalAlignment="Center" Grid.Row="10" />
                    <Grid Grid.Row="10" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ListBox TabIndex="9" ItemsSource="{Binding DataOne}" ek:DragDrop.IsDropTarget="True" ek:DragDrop.IsDragSource="True" />
                        <ListBox TabIndex="10" Grid.Column="1" ItemsSource="{Binding DataTwo}" ek:DragDrop.IsDropTarget="True" ek:DragDrop.IsDragSource="True" />
                    </Grid>

                    <TextBlock Text="RadioButton" VerticalAlignment="Center" Grid.Row="11" />
                    <StackPanel Orientation="Horizontal" Grid.Row="11" Grid.Column="1">
                        <RadioButton GroupName="testGroup1" Content="Radio Button 1" Margin="5" />
                        <RadioButton GroupName="testGroup1" Content="Radio Button 2" Margin="5" />
                        <RadioButton GroupName="testGroup1" Content="Radio Button 3" Margin="5" />
                        <RadioButton GroupName="testGroup2" Content="Radio Button 4" Margin="5" />
                        <RadioButton GroupName="testGroup2" Content="Radio Button 5" Margin="5" />
                        <RadioButton GroupName="testGroup2" Content="Radio Button 6" Margin="5" />
                    </StackPanel>
                </Grid>
            </TabItem>

            <TabItem Header="DataGrid">
                <DataGrid ItemsSource="{Binding GridData}" AutoGenerateColumns="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="#" Binding="{Binding Number}" />
                        <DataGridTextColumn Header="Text" Binding="{Binding Text}" Width="200" >
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="DataGridCell">
                                    <Setter Property="Background" Value="Gray" />
                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                    <Setter Property="VerticalAlignment" Value="Center" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridCheckBoxColumn Header="Bool" Binding="{Binding Boolean}" Width="SizeToHeader" />
                        <DataGridTemplateColumn Width="*">
                            <DataGridTemplateColumn.Header>
                                <TextBlock Text="Template Column" />
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <Setter Property="Foreground" Value="Orange" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Text}" />
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Boolean}" />
                                            <TextBlock Text="{Binding Number}" />
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>
            <TabItem Header="TreeView">
                <TreeView ItemsSource="{Binding TreeItems}" />
            </TabItem>
            <TabItem Header="Chart">
                <c:Chart AxisYMajorUnit="50">
                    <c:Chart.Series>
                        <c:LineSeries2D>
                            <c:LineSeries2D.Points>
                                <c:SeriesPoint Argument="0" Value="0" />
                                <c:SeriesPoint Argument="1" Value="10" />
                                <c:SeriesPoint Argument="2" Value="20" />
                                <c:SeriesPoint Argument="3" Value="50" />
                                <c:SeriesPoint Argument="4" Value="100" />
                                <c:SeriesPoint Argument="5" Value="200" />
                                <c:SeriesPoint Argument="6" Value="500" />
                            </c:LineSeries2D.Points>
                        </c:LineSeries2D>
                        <c:LineSeries2D LineThickness="1" Foreground="Orange" DataSource="{Binding ChartData}" />
                    </c:Chart.Series>
                </c:Chart>
            </TabItem>
            <TabItem Header="Shapes">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Rectangle Height="100" Width="200" RadiusX="10" RadiusY="10" Fill="Green" Stroke="Gray" StrokeThickness="5" Margin="5" />
                    <Rectangle Height="100" Width="200" Fill="Orange" Margin="5" Grid.Column="1" />
                    <Rectangle Height="100" Width="200" RadiusX="10" RadiusY="10" StrokeThickness="5" Margin="5" Grid.Column="2">
                        <Rectangle.Fill>
                            <LinearGradientBrush >
                                <GradientStop Color="Orange" Offset="0.5" />
                                <GradientStop Color="#FF00A2FF"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                        <Rectangle.Stroke>
                            <LinearGradientBrush >
                                <GradientStop Color="#FF00A2FF" Offset="0.5" />
                                <GradientStop Color="Orange"/>
                            </LinearGradientBrush>
                        </Rectangle.Stroke>
                    </Rectangle>

                    <Ellipse Height="100" Width="200" Fill="Gray" Stroke="Green" StrokeThickness="10" Margin="5" Grid.Row="1"/>
                    <Ellipse Height="100" Width="200" Stroke="Orange" StrokeThickness="10" Margin="5" Grid.Row="1" Grid.Column="1"/>
                    <Ellipse Height="100" Width="200" StrokeThickness="10" Margin="5" Grid.Row="1" Grid.Column="2">
                        <Ellipse.Fill>
                            <LinearGradientBrush >
                                <GradientStop Color="Orange" Offset="0.5" />
                                <GradientStop Color="#FF00A2FF"/>
                            </LinearGradientBrush>
                        </Ellipse.Fill>
                        <Ellipse.Stroke>
                            <LinearGradientBrush >
                                <GradientStop Color="#FF00A2FF" Offset="0.5" />
                                <GradientStop Color="Orange"/>
                            </LinearGradientBrush>
                        </Ellipse.Stroke>
                    </Ellipse>

                    <Line X1="10" Y1="10" X2="150" Y2="150" Stroke="Gray" StrokeThickness="10" Grid.Row="2" />
                    <Line X1="100" Y1="10" X2="100" Y2="100" Stroke="Gray" StrokeThickness="10" Grid.Row="2" />
                    <Line X1="10" Y1="100" X2="100" Y2="100" Stroke="Gray" StrokeThickness="10" Grid.Row="2" />

                    <Rectangle Height="100" Width="200" RadiusX="10" RadiusY="10" Margin="5" Grid.Row="2" Stroke="White" StrokeThickness="1" Grid.Column="1">
                        <Rectangle.Fill>
                            <ImageBrush Stretch="None" ImageSource="{StaticResource Image}" />
                        </Rectangle.Fill>
                    </Rectangle>

                    <Image Grid.Row="2" Grid.Column="2" Source="{Binding RenderTargetSource}" />
                </Grid>
            </TabItem>
            <TabItem Header="Animations">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <StackPanel>
                        <Button Name="animButton1" Style="{DynamicResource buttonAnimStyle}" Content="Mouse Over me!" TabIndex="1"/>
                        <Button Name="animButton2" Style="{DynamicResource buttonAnimStyle}" Content="Mouse Over me!" TabIndex="2"/>
                        <Button Name="animButton3" Style="{DynamicResource buttonAnimStyle}" Content="Mouse Over me!" TabIndex="3"/>
                        <Button Name="animButton4" Style="{DynamicResource buttonAnimStyle}" Content="Mouse Over me!" TabIndex="4"/>
                    </StackPanel>


                    <Border Name="animBorder1" Width="200" Height="100" Margin="0,10,0,10" Grid.Column="1" VerticalAlignment="Top">
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ek:SolidColorBrushAnimation
                                Storyboard.TargetName="animBorder1" 
                                Storyboard.TargetProperty="Background"                                
                                From="Yellow" To="Blue" Duration="0:0:5" AutoReverse="True"
                                RepeatBehavior="Forever">
                                            <ek:SolidColorBrushAnimation.EasingFunction>
                                                <ExponentialEase />
                                            </ek:SolidColorBrushAnimation.EasingFunction>
                                        </ek:SolidColorBrushAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Border.Triggers>
                    </Border>

                    <Border Name="animBorder2" Width="100" Height="50" Margin="50,35,50,35" Grid.Column="1" VerticalAlignment="Top">
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ek:SolidColorBrushAnimation
                                Storyboard.TargetName="animBorder2" 
                                Storyboard.TargetProperty="Background"                                
                                From="Red" To="White" Duration="0:0:3" AutoReverse="True"
                                RepeatBehavior="Forever">
                                            <ek:SolidColorBrushAnimation.EasingFunction>
                                                <CubicEase />
                                            </ek:SolidColorBrushAnimation.EasingFunction>
                                        </ek:SolidColorBrushAnimation>

                                        <DoubleAnimation
                                        Storyboard.TargetName="animBorder2" 
                                        Storyboard.TargetProperty="Opacity"                                
                                        From="1" To="0" Duration="0:0:4" AutoReverse="True" RepeatBehavior="Forever">
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>

                        </Border.Triggers>
                    </Border>

                </Grid>
            </TabItem>

            <TabItem Header="Tetris">
                <Border>
                    <Grid Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="420" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Vertical" Grid.Row="1" HorizontalAlignment="Right">
                            <TextBlock Text="Next" />
                            <Border BorderBrush="White" BorderThickness="0,0,1,1" Width="81" Height="81">
                                <Canvas Name="tetrisNextContainer1" Width="80" Height="80" />
                            </Border>
                        </StackPanel>

                        <Border BorderBrush="White" BorderThickness="0,0,1,1" Grid.Row="1" Grid.Column="1" Width="201" Height="401">
                            <Canvas Name="tetrisContainer1" Width="200" Height="400" HorizontalAlignment="Left" VerticalAlignment="Top" />
                        </Border>

                        <Grid Grid.ColumnSpan="3" DataContext="{Binding Tetris}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Button Content="Start" Command="{Binding StartCommand}" Grid.ColumnSpan="3" Height="30" />

                            <Grid Grid.Row="1" Grid.Column="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="70" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <StackPanel Name="spPlayer1" Orientation="Vertical" HorizontalAlignment="Right">
                                    <TextBlock Text="{Binding Score}" />
                                    <TextBlock Text="{Binding Lines}" />
                                    <TextBlock Text="{Binding Level}" />
                                </StackPanel>

                                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Grid.Column="1">
                                    <TextBlock Text="SCORE" />
                                    <TextBlock Text="LINES" />
                                    <TextBlock Text="LEVEL" />
                                </StackPanel>

                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                                    <TextBlock Text="Use A,S,D,W for left, down, right, rotate" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>
            </TabItem>
            <TabItem Header="User Control">
                <local:UserControlTest />
            </TabItem>
        </TabControl>
    </Grid>
</ek:UIRoot>
